services:
  backend-app:
    container_name: backend-app
    build:
      context: ../backend
      dockerfile: Dockerfile
    networks:
      wongnok-network:
        ipv4_address: 192.168.1.2

  frontend-app:
    container_name: frontend-app
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      wongnok-network:
        ipv4_address: 192.168.1.4

  reverse-proxy-backend:
    container_name: reverse-proxy-backend
    environment:
      - REVERSE_PROXY_PORT=8082
      - TZ=Asia/Bangkok
    build: "./nginx"
    ports:
      - "8082:70"
    networks:
      wongnok-network:
        ipv4_address: 192.168.1.5
    depends_on:
      - "backend-app"

  sqlserver:
    image: mcr.microsoft.com/mssql/server
    container_name: sqlserver
    environment:
      MSSQL_SA_PASSWORD: "yourStrong(!)Password"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - ../database:/post-init-scripts
    networks:
      wongnok-network:
        ipv4_address: 192.168.1.6
  sql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - "sqlserver"
    volumes:
      - ../database:/post-init-scripts
    command: >
      sh -c "
        echo 'Waiting for SQL Server to be fully ready...' &&
        /opt/mssql-tools/bin/sqlcmd -S sqlserver -U SA -P 'yourStrong(!)Password' -d master -i /post-init-scripts/initialize.sql &&
        echo 'Post-start script executed successfully.' ||
        echo 'Post-start script execution failed.'
      "
    networks:
      wongnok-network:
        ipv4_address: 192.168.1.7
networks:
  wongnok-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
